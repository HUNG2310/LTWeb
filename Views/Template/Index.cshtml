@model List<WorkManager.Models.Template>

@{
    ViewData["Title"] = "M·∫´u c√¥ng vi·ªác";
}

<div class="container mt-4">
    <h2 class="mb-4">üìã M·∫´u c√¥ng vi·ªác</h2>

    <form asp-action="Create" method="post" class="row g-2 mb-4">
        <div class="col-md-5">
            <input name="name" class="form-control" placeholder="T√™n m·∫´u c√¥ng vi·ªác" required />
        </div>
        <div class="col-md-5">
            <input name="description" class="form-control" placeholder="M√¥ t·∫£ (t√πy ch·ªçn)" />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-success w-100">+ Th√™m</button>
        </div>

    </form>

    @if (!Model.Any())
    {
        <div class="alert alert-warning">Ch∆∞a c√≥ m·∫´u n√†o.</div>
    }
    else
    {
        <div class="row">
            @foreach (var tpl in Model)
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@tpl.Name</h5>
                            <p class="card-text text-muted">@tpl.Description</p>
                            <div class="mt-auto">
                                 <a asp-action="Use" asp-route-id="@tpl.Id" class="btn btn-sm btn-primary me-2">
                                    ‚úÖ Ch·ªçn m·∫´u
                                </a>
                                <a asp-action="Delete" asp-route-id="@tpl.Id" class="btn btn-sm btn-danger">
                                    X√≥a m·∫´u
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
<div aria-live="polite" aria-atomic="true" class="position-relative">
    <div class="toast-container position-fixed bottom-0 end-0 p-3 z-3">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                         @TempData["SuccessMessage"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
        else if (TempData["DeletedMessage"] != null)
        {
            <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                         @TempData["DeletedMessage"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
        else if (TempData["ErrorMessage"] != null)
        {
            <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        ‚ùå @TempData["ErrorMessage"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toastEl => {
                const toast = new bootstrap.Toast(toastEl, { delay: 3000 });
                toast.show();
            });
        });
    </script>
}

